{
  "variables": {
    "scaleFunction": 0.5,
    "scale": 1,
    "scale2": 2,
    "poop": 1,
    "y": 500,
    "x": 1000,
    "anchor": 0.5,
    "testMath":"1+1",
    "testMath2":"10*2"
  },
  "abraCommands": {
    "abraLoad": "function (dirAdd) { var phaserConfig = document.getElementById(\"phaserConfig\").getAttribute('value'); var listFiles = document.getElementById(\"listFiles\").getAttribute('value'); this.game.phaserConfig = JSON.parse(phaserConfig); var regEx = /^.*[\\\/]/; var regEx2 = /([^\\\/]*)\\\/*$/; game.assetList = JSON.parse(listFiles); game.assetList.forEach(function (file) { if (Array.isArray(file)) { console.log(game.phaserConfig); var filename = file[0].replace(regEx, ''); var name = filename.substr(0, filename.lastIndexOf('.')); var lastFile; var newFileArray = []; var pathArray = file[0].split('/'); if(dirAdd) { var lastDir = pathArray[pathArray.length - 2] + '-'; } else { var lastDir = ''; } file.forEach(function (newFile) { newFileArray.push(newFile); lastFile = newFile; }); if (filename == name + '.mp3' || filename == name + '.ogg' || filename == name + '.wav') { game.load.audio(lastDir + name, newFileArray); } else if (game.phaserConfig['bitmap'] && game.phaserConfig['bitmap'].join().includes(name) && !this.game.phaserConfig.spritesheet[name]) { game.load.bitmapFont(lastDir + name, file[1], file[0]); } else if (game.phaserConfig['bitmap'] && game.phaserConfig['bitmap'].join().includes(name) && this.game.phaserConfig.spritesheet[name]) { game.load.atlasXML(lastDir + name, file[1], file[0]); } else if (file[1].toLowerCase().includes('.json') && this.game.phaserConfig.spritesheet[name]) { game.load.atlas(lastDir + name, file[0], file[1], Phaser.Loader.TEXTURE_ATLAS_JSON_HASH); } else if (file[1].toLowerCase().includes('.json')) { game.load.tilemap(lastDir + name, file[1], null, Phaser.Tilemap.TILED_JSON); game.load.image(lastDir + name+'-tiles', file[0]); } else if (file[1].toLowerCase().includes('.csv')) { game.load.tilemap(lastDir + name, file[1], null, Phaser.Tilemap.CSV); game.load.image(lastDir + name+'-tiles', file[0]); } else { } } else { var filename = file.replace(regEx, ''); var name = filename.substr(0, filename.lastIndexOf('.')); var objName = file.match(regEx2)[2]; var pathArray = file.split('/'); if(dirAdd) { var lastDir = pathArray[pathArray.length - 2] + '-'; } else { var lastDir = ''; } console.log(game.assetList); if (game.phaserConfig.spritesheet[name]) { game.load.spritesheet(lastDir + name, file, this.game.phaserConfig.spritesheet[name].height, game.phaserConfig.spritesheet[name].width, game.phaserConfig.spritesheet[name].frames); } else if (filename == name + '.mp3' || filename == name + '.ogg' || filename == name + '.wav') { game.load.audio(lastDir + name, file); } else if (filename.toLowerCase().includes('.json')) { game.load.json(name, file); } else if (filename.toLowerCase().includes('.mp4') || filename.toLowerCase().includes('.flv') || filename.toLowerCase().includes('.webm')) { game.load.video(lastDir + name, file); } else if (filename == name + '.txt') { game.load.text(lastDir + name, file); } else { game.load.image(lastDir + name, file); } } }); }",
    "abraSprite":{
      "create": "function (spriteAttributes, sprite) { if (!spriteAttributes.position) { spriteAttributes.position = {}; } if (!spriteAttributes.position.x) { spriteAttributes.position.x = 0; } if (!spriteAttributes.position.y) { spriteAttributes.position.y = 0; } if (!spriteAttributes.anchor) { spriteAttributes.anchor = {}; } if (!spriteAttributes.anchor.x) { spriteAttributes.anchor.x = 0; } if (!spriteAttributes.anchor.y) { spriteAttributes.anchor.y = 0; } game[sprite] = game.add.sprite(spriteAttributes.position.x, spriteAttributes.position.y, sprite); game[sprite].anchor.x = spriteAttributes.anchor.x; game[sprite].anchor.y = spriteAttributes.anchor.y; }"
    }
  },
  "createMenu": {
    "sprite1" : {
      "position":{
        "x":100,
        "y": 500
      },
      "scale": {
        "x": 1.2,
        "y": 1.2
      }
      
    },
    "spinner2" : {
      "position":{
        "x":400,
        "y": 300
      },
      "scale": {
        "x": 0.5,
        "y": 0.5
      }
      
    }
    
  },
  "spritesheet2": {
    "sprite1" : {
      "height": "${testMath}",
      "width": "${testMath}",
      "width2": "${testMath}",
      "width3": "${testMath}",
      "width4": "${testMath2}"
    }
    
  },
  "loopCreate":{
    "spinner2": {
      "name": "spinner2",
      "x": ["${mx}","${mx}","${mx}","${mx}","${mx}","${mx}"],
      "y": ["${my}","${my}","${my}","${my}","${my}","${my}"]
    }
  }
}